///$tab 0.0 Change Log
/******************************************************************************************************************************************\
* 
*	Name:    	Qlik Sense SaaS Demo Presentation Application
*	Author:  	Qlik Sense SaaS 
*	Desc:    	An application to demonstrate some best practices for Qlik Sense presentation application development.
*
\******************************************************************************************************************************************/

// Update this version control table after each edit. Avoid using the ; delimiter in your change log.
Island_VersionControl:
LOAD
    *
INLINE [
%Ver_Version; %Ver_Date; %Ver_Author; %Ver_Change
0.1; 2020-10-19; Qlik Sense SaaS; Initial development
0.2; 2021-01-15; Qlik Sense SaaS; Added Intro Sheet and Help Story Boards
1.0; 2021-01-19; Qlik Sense SaaS; Initial release
1.1; 2021-01-28; Qlik Sense SaaS; Minor Enhancements;  Added Qlik Overview Story
1.2; 2021-02-22; Qlik Sense SaaS; Updated for name change from Pilot to Demo
1.3; 2021-05-01; Qlik Sense SaaS; Changed the application name.  Also changed local datafiles referencing and environment variable management.
1.5; 2021-06-14; Qlik Sense SaaS; Updated excel file to latest version xlsx to modify in Teams
1.6; 2021-09-21; Qlik Sense SaaS; Added Space Details and code to determine read and store QVD locations

] (delimiter is ';');

// Do not edit the section below as this loads and sets the version variable in the app using the table above
// Identify the maximum version
Temp_Version:
LOAD
    Max(%Ver_Version) AS Temp_Max_Version
RESIDENT Island_VersionControl;

 

// Set the version variable
LET vVersion = Peek('Temp_Max_Version',0,'Temp_Version');

 

// Drop the temporary table
DROP TABLE Temp_Version;


///$tab 0.5 Space Details
// 1.  Get the app ID
LET appId = DocumentName();
Let appName = DocumentTitle();

//****set connection to use for this tenant.*****//
Set vu_tenant_fqdn = '9e3dok9017rz9fo.eu.qlikcloud.com'; //Update to your host name
Set vu_rest_connection = 'Monitoring apps:REST for App Analyzer'; //Update space name if needed
Set vNextURL = '';
LIB Connect To '$(vu_rest_connection)';


// set the endpoint for app details
Set baseURL= "https://$(vu_tenant_fqdn)/api/v1/apps/$(appId)";

RestConnectorMasterTable:
SQL SELECT 
	"__KEY_root",
	(SELECT 
		"spaceId",
		"_resourcetype",
		"__KEY_attributes",
		"__FK_attributes",
		(SELECT 
			"__FK_custom"
		FROM "custom" FK "__FK_custom")
	FROM "attributes" PK "__KEY_attributes" FK "__FK_attributes")
FROM JSON (wrap on) "root" PK "__KEY_root"
 WITH CONNECTION (  
      URL "$(baseURL)?$(vNextURL)"
      );

AppDetails:
    Load	
        If(len(spaceId)=0,'Personal',spaceId) as SpaceId
    Resident RestConnectorMasterTable
    WHERE NOT IsNull([__FK_attributes]);

DROP TABLE RestConnectorMasterTable;

let vSpaceId = peek('SpaceId');
trace spaceId = $(vSpaceId);

drop table AppDetails;

if '$(vSpaceId)' <> 'Personal' then

  // set the endpoint for space details
  Set baseURL= "https://$(vu_tenant_fqdn)/api/v1/spaces/$(vSpaceId)";

  //LIB Connect To '$(vu_rest_connection)';

  RestConnectorMasterTable:
  SQL SELECT 
  //	"id",
      "type",
  //	"ownerId",
  //	"tenantId",
      "name",
      "description",
  // 	"createdAt",
  // 	"createdBy",
  // 	"updatedAt",
      "__KEY_root"
  FROM JSON (wrap on) "root" PK "__KEY_root"
  WITH CONNECTION (  
        URL "$(baseURL)?$(vNextURL)"
        );

  [space]:
  LOAD
      [type] as spaceType,
      [name] as spaceName,
      [description] as spaceDescription
  RESIDENT RestConnectorMasterTable
  WHERE NOT IsNull([__KEY_root]);

  DROP TABLE RestConnectorMasterTable;

  let vSpaceType = peek('spaceType');
  let vSpacePrefix = left(peek('spaceName'),2);
  let vSpaceName = peek('spaceName');
  let vspaceDescription = peek('spaceDescription');
  drop Table space;
else
	let vSpaceType = 'Personal';
  let vSpaceName = 'Personal';
  let vspaceDescription = 'Personal';
end if

trace ###################################;
trace Name = $(appName);
trace ID = $(appId);
trace SpacePrefix = $(vSpacePrefix); 
trace spaceName = $(vSpaceName);
trace spaceDescription = $(vspaceDescription);
trace SpaceType = $(vSpaceType);
trace ###################################;


///$tab 1.0 Variables
// // Run the script loading environment specific variables:
$(Must_Include=[lib://:DataFiles/SalesAnalysisEnvironmentVariables.txt]);

/**  CONFIGURATION CHANGES REQUIRED PRE RELOAD**/

// $(Must_Include=[lib://:DataFiles/TransformEnvironmentVariables.txt]);

/*if $(vSpacePrefix) = '01' then 
  Let vPathTransformQVDs='lib://01.SaaS Demo App Transform-DEV:DataFiles';
  Let vPathExtractQVDs='lib://01.SaaS Demo App Extract-DEV:DataFiles';
else
  if $(vSpacePrefix) = '02' then 
    Let vPathTransformQVDs='lib://02.SaaS Demo App Transform-TEST:DataFiles';
    Let vPathExtractQVDs='lib://02.SaaS Demo App Extract-TEST:DataFiles';
   
  else
    Let vPathTransformQVDs='lib://03.SaaS Demo App Transform - PROD:DataFiles';
    Let vPathExtractQVDs='lib://03.SaaS Demo App Extract - PROD:DataFiles';
    end if
end if*/
  Let vPathTransformQVDs='lib://01.SaaS Demo App Transform-DEV:DataFiles';
  Let vPathExtractQVDs='lib://01.SaaS Demo App Extract-DEV:DataFiles';
TRACE $(vPathTransformQVDs);
TRACE $(vPathExtractQVDs); 

Set vAppType =Presentation;

Variables:
LOAD
  "Variable Name",
  "Value"
FROM [lib://:DataFiles/ExternalVariables.xlsx]
(ooxml, embedded labels, table is Sheet1)
WHERE NOT ISNULL("Variable Name")
AND NOT ISNULL("$(vAppType)");

trace variable name is $(vPathTransformQVDs);

Let vVarCount=RangeMax(NoOfRows('Variables'),0)-1;

// Create the variables using LET or SET as directed:
For i=0 to $(vVarCount)

  Let vTempName = peek('Variable Name',$(i),'Variables');
  Let vTempValue = peek('Value',$(i),'Variables');
  Let vLetSet = peek('Let or Set',$(i),'Variables');
  $(vLetSet) $(vTempName) = vTempValue;
  
Next 



///$tab 2.0 Load Tables
// Load and retain the tables comprising the data model:

[Multi-FACT]:
Load * From [$(vPathTransformQVDs)/Transform_Demo_Multi-FACT.qvd](qvd);

[Products DIM]: 
Load * From [$(vPathTransformQVDs)/Transform_Demo_Products_DIM.qvd](qvd);

[Customers DIM]: 
Load * From [$(vPathTransformQVDs)/Transform_Demo_Customers_DIM.qvd](qvd);

[Warehouses DIM]: 
Load * From [$(vPathTransformQVDs)/Transform_Demo_Warehouses_DIM.qvd](qvd);

[Sales Reps DIM]: 
Load * From [$(vPathTransformQVDs)/Transform_Demo_Sales_Reps_DIM.qvd](qvd);

[Order Date DIM]: 
Load * From [$(vPathTransformQVDs)/Transform_Demo_Order_Date_DIM.qvd](qvd);

[Revenue Targets DIM]: 
Load * From [$(vPathTransformQVDs)/Transform_Demo_Revenue_Targets_DIM.qvd](qvd);

[Sales Quotas DIM]: 
Load * From [$(vPathTransformQVDs)/Transform_Demo_Sales_Quotas_DIM.qvd](qvd);



// LOAD
//     @1
// FROM [lib://01.SaaS Demo App Transform-DEV:DataFiles/TransformEnvironmentVariables.txt]
// (txt, codepage is 28591, no labels, delimiter is ';', msq);


///$tab 3.0 Clean Up
// Clean up temporary variables and Variables table:
For i=0 to $(vVarCount)

  Let vTempVarName = peek('Variable Name',$(i),'Variables');
  
  If Left(vTempVarName,5) = 'vTemp' Then
    // Drop variables no longer needed by nullifying them:
    Let $(vTempVarName) = Null();
  Endif
  
Next

// Drop variables no longer needed by nullifying them:
Let vTempName = Null();
Let vTempValue = Null();
Let vVarCount = Null();
Let vTempVarName = Null();
Let vTempVarValue = Null();
Let i = Null();

Drop table Variables;

///$tab 4.0 Exit Script
Exit Script;
///$tab 1.0 Variables
// Run the script loading environment specific variables:
$(Must_Include=[lib://:DataFiles/SalesAnalysisEnvironmentVariables.txt]);


// Load variables from external spreadsheet:

Set vVariablesPathFile = 'lib://:DataFiles/ExternalVariables.xlsx'; //DP 09-22-21: updated to read from Transform space if nothing changes
Set vPathTransformQVDs = '';
Set vAppType = 'Presentation';

Variables:
LOAD
  "Variable Name",
  "Value"
FROM [lib://:DataFiles/ExternalVariables.xlsx]
(ooxml, embedded labels, table is Sheet1)
WHERE NOT ISNULL("Variable Name")
AND NOT ISNULL("$(vAppType)");

trace variable name is $(vPathTransformQVDs);

Let vVarCount=RangeMax(NoOfRows('Variables'),0)-1;

// Create the variables using LET or SET as directed:
For i=0 to $(vVarCount)

  Let vTempName = peek('Variable Name',$(i),'Variables');
  Let vTempValue = peek('Value',$(i),'Variables');
  Let vLetSet = peek('Let or Set',$(i),'Variables');
  $(vLetSet) $(vTempName) = vTempValue;
  
Next


// LOAD
//     Extraction,
//     Transformation,
//     Schema,
//     Presentation,
//     "Variable Name",
//     Value,
//     Comments,
//     "Let or Set",
//     "Prior Value"
// FROM [lib://01.SaaS Demo App Presentation-DEV:DataFiles/ExternalVariables.xlsx]
// (ooxml, embedded labels, table is Sheet1);



